/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.flujos.Formularios;

import com.flujos.Utilidades.Utilidades;
import java.sql.Connection;
import java.sql.SQLException;
import com.flujos.DAOs.DAOCheque;
import com.flujos.DAOs.DAOChequePropio;
import com.flujos.DAOs.DAOClienteProveedor;
import com.flujos.DAOs.DAOCuenta;
import com.flujos.Entidades.Cheque;
import com.flujos.Entidades.ChequePropio;
import com.flujos.Entidades.ClienteProveedor;
import com.flujos.Utilidades.Conexion;
import java.math.BigDecimal;
import java.sql.PreparedStatement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Sol
 */
public class FrmABMChequePropio extends javax.swing.JFrame {
    private Conexion con;
    DefaultComboBoxModel<String> modeloCuentaSalida = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<String> modeloComboclienteProveedorDestino = new DefaultComboBoxModel<>();
    
    private DAOCheque daoCheque;
    private DAOChequePropio daoChequePropio;
    private DAOCuenta daoCuenta;
    
    /**
     * Creates new form FrmABMChequePropio
     */
    public FrmABMChequePropio() {
        try {
            initComponents();
            comboCuentaSalida.setModel(modeloCuentaSalida);
            comboTitularDestino.setModel(modeloComboclienteProveedorDestino);

            inicializar();
        } catch (SQLException ex) {
            Utilidades.msg(null, "Error al inicializar la ventana");
            this.dispose();
        }
    }

    private void inicializar() throws SQLException {
        
        con = new Conexion();
        daoCheque = new DAOCheque();
        daoCuenta = new DAOCuenta();
        daoChequePropio = new DAOChequePropio();
        TxtNumero.setText("");
        TxtImporteCheque.setText("");
        jDateFechaCobro.setDate(null);     
        TxtIdTitularCheque.setVisible(false);
        TxtIdCuenta.setVisible(false);
        TxtObservacionCheque.setText("");
        daoCheque.llenarComboClienteProveedorDestino(modeloComboclienteProveedorDestino, con.getConexion());
        comboTitularDestino.setSelectedIndex(0);
        daoCuenta.llenarComboCuentaSalida(modeloCuentaSalida, con.getConexion()); 
        comboCuentaSalida.setSelectedIndex(0);
        btnAgregar.setEnabled(true);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnLimpiar.setEnabled(true);
        

     }  
       
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnBuscarCuenta = new javax.swing.JButton();
        lblObservacionCheque = new javax.swing.JLabel();
        TxtObservacionCheque = new javax.swing.JTextField();
        jDateFechaCobro = new com.toedter.calendar.JDateChooser();
        TxtNumero = new javax.swing.JTextField();
        lblNumCheque = new javax.swing.JLabel();
        lblImporteCheque = new javax.swing.JLabel();
        comboTitularDestino = new javax.swing.JComboBox<>();
        TxtImporteCheque = new javax.swing.JTextField();
        comboCuentaSalida = new javax.swing.JComboBox<>();
        lblFechaCobro = new javax.swing.JLabel();
        lblCuentaSalida = new javax.swing.JLabel();
        lblTitularDestino = new javax.swing.JLabel();
        TxtIdTitularCheque = new javax.swing.JTextField();
        TxtIdChequePropio = new javax.swing.JTextField();
        TxtIdCuenta = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnBuscarCuenta.setText("Buscar");
        btnBuscarCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCuentaActionPerformed(evt);
            }
        });

        lblObservacionCheque.setText("Observacion cheque");

        lblNumCheque.setText("Numero de cheque:");

        lblImporteCheque.setText("Importe de cheque:");

        comboTitularDestino.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboTitularDestinoItemStateChanged(evt);
            }
        });

        comboCuentaSalida.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboCuentaSalidaItemStateChanged(evt);
            }
        });
        comboCuentaSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCuentaSalidaActionPerformed(evt);
            }
        });

        lblFechaCobro.setText("Fecha de cobro:");

        lblCuentaSalida.setText("Cuenta salida:");

        lblTitularDestino.setText("Titular de destino:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnBuscarCuenta)
                                .addGap(64, 64, 64)
                                .addComponent(TxtIdChequePropio, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(208, 208, 208))
                            .addComponent(btnSalir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblNumCheque, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TxtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblImporteCheque, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71)
                                .addComponent(TxtImporteCheque, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblFechaCobro, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71)
                                .addComponent(jDateFechaCobro, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblCuentaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(71, 71, 71)
                                        .addComponent(comboCuentaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblObservacionCheque, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(71, 71, 71)
                                        .addComponent(TxtObservacionCheque, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(lblTitularDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(71, 71, 71)
                                    .addComponent(comboTitularDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TxtIdTitularCheque, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TxtIdCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarCuenta)
                    .addComponent(TxtIdChequePropio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumCheque)
                    .addComponent(TxtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblImporteCheque)
                    .addComponent(TxtImporteCheque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblFechaCobro))
                    .addComponent(jDateFechaCobro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitularDestino)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboTitularDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(TxtIdTitularCheque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblObservacionCheque)
                    .addComponent(TxtObservacionCheque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCuentaSalida)
                    .addComponent(comboCuentaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TxtIdCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAgregar)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar)
                    .addComponent(btnLimpiar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSalir)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if (TxtNumero.getText().equals("")) {
            Utilidades.msg(null, "El numero del cheque no puede estar vacio");
            TxtNumero.requestFocus();
            return;
        }

        if (Utilidades.isNunInt(TxtNumero.getText()) && !(Integer.parseInt(TxtNumero.getText()) > 0)) {
            Utilidades.msg(null, "Numero incorrecto");
            TxtNumero.setText("");
            TxtNumero.requestFocus();
            return;
        }

        if (TxtImporteCheque.getText().equals("")) {
            Utilidades.msg(null, "El importe no puede estar vacio");
            TxtImporteCheque.requestFocus();
            return;
        }

        if (!Utilidades.isValidBigDecimal(TxtImporteCheque.getText())) {
            Utilidades.msg(null, "Importe incorrecto");
            TxtImporteCheque.setText("");
            TxtImporteCheque.requestFocus();
            return;
        }
        
        if (jDateFechaCobro.getDate() == null) {
            Utilidades.msg(null, "Ingrese una fecha de cobro");
            jDateFechaCobro.setDate(null);
            jDateFechaCobro.requestFocus();
            return;
        }

        if (comboCuentaSalida.getSelectedItem().equals("--")) {
            Utilidades.msg(null, "Debe seleccionar un titular para el cheque");
            comboCuentaSalida.requestFocus();
            return;
        }

        if (Utilidades.existe(con.getConexion(), "SELECT (1) FROM cheque_propio WHERE nro_cheque = " + Long.parseLong(TxtNumero.getText()) + " ")) {
            Utilidades.msg(null, "No se puede ingresar porque el numero de cheque ya existe");
            TxtNumero.setText("");
            TxtIdTitularCheque.setText("");
            TxtImporteCheque.setText("");
            comboCuentaSalida.setSelectedIndex(0);
            jDateFechaCobro.setDate(null);
            TxtIdChequePropio.setText("");
            
        } else {
            try {
                ChequePropio chequePropio = new ChequePropio();
                
                chequePropio.setFechaEntregaCheque(jDateFechaCobro.getDate());
                chequePropio.setImporteCheque(new BigDecimal(TxtImporteCheque.getText()));
                chequePropio.setNumCheque(Long.parseLong(TxtNumero.getText()));
                chequePropio.setObservacionCheque(TxtObservacionCheque.getText());
                //validar que no sea nulo o ""
                chequePropio.setTitularDestino((TxtIdTitularCheque.getText() != null && !TxtIdTitularCheque.getText().equals("")) ? Long.parseLong(TxtIdTitularCheque.getText()) : null);

                daoChequePropio.ingresarChequePropio(chequePropio, con.getConexion());
                Utilidades.msg(null, "Cheque ingresado correctamente");
                TxtNumero.setText("");
                TxtImporteCheque.setText("");
                jDateFechaCobro.setDate(null);
                TxtObservacionCheque.setText("");
                comboTitularDestino.setSelectedIndex(0);

            } catch (SQLException ex) {
                Utilidades.msg(null, "Error al ingresar el Cheque");
                this.dispose();
            }
        }
    }//GEN-LAST:event_btnAgregarActionPerformed
    
    
    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        TxtNumero.setText("");
        TxtImporteCheque.setText("");
        jDateFechaCobro.setDate(null);
        TxtIdChequePropio.setText("");
        TxtIdTitularCheque.setText("");
        TxtObservacionCheque.setText("");
        btnAgregar.setEnabled(true);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnLimpiar.setEnabled(true);
        comboTitularDestino.setSelectedIndex(0);
        comboCuentaSalida.setSelectedIndex(0);

    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        try {
            con.cerrarConexion();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al salir de la ventana, intente de nuevo.");
            this.dispose();
        }
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnBuscarCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCuentaActionPerformed


        btnAgregar.setEnabled(false);
        btnModificar.setEnabled(true);
        btnEliminar.setEnabled(true);

        String dato = JOptionPane.showInputDialog("Numero de cheque: ");

        if (dato != null && !dato.equals("") && Utilidades.isNumLong(dato) && Long.parseLong(dato) > 0) {
            Long datoLong = Long.valueOf(dato);
            ChequePropio chequePropio = daoChequePropio.obtenerDatos(datoLong, con.getConexion());

            if (chequePropio != null) {

                TxtIdChequePropio.setText(chequePropio.getIdCheque().toString());
                TxtNumero.setText(chequePropio.getNumCheque().toString());
                TxtImporteCheque.setText(chequePropio.getImporteCheque().toString());
                TxtIdTitularCheque.setText(chequePropio.getTitularDestino().toString());
                TxtObservacionCheque.setText(chequePropio.getObservacionCheque());
                jDateFechaCobro.setDate(chequePropio.getFechaCobroCheque());
                comboTitularDestino.setSelectedItem(daoCheque.obtenerNombreRazonSocial(Long.parseLong(TxtIdTitularCheque.getText()), con.getConexion()));
                comboCuentaSalida.setSelectedItem(daoCuenta.obtenerCuenta(chequePropio.getIdCuentaSalida(), con.getConexion()));

                String nombreRazonSocial = daoCheque.obtenerNombreRazonSocial(chequePropio.getTitularDestino(), con.getConexion());

                if (nombreRazonSocial != null) {
                    comboTitularDestino.setSelectedItem(nombreRazonSocial);
                } else {
                    comboTitularDestino.setSelectedItem("--");
                }

            } else {
                Utilidades.msg(null, "No existe el Cliente/Proveedor o se produjo un error");
                btnAgregar.setEnabled(true);
                btnModificar.setEnabled(false);
                btnEliminar.setEnabled(false);

            }

        } else {
            Utilidades.msg(null, "Debe ingresar un número entero mayor a 0");
            btnAgregar.setEnabled(true);
            btnModificar.setEnabled(false);
            btnEliminar.setEnabled(false);
        }
        
    }//GEN-LAST:event_btnBuscarCuentaActionPerformed

    private void comboTitularDestinoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboTitularDestinoItemStateChanged

        TxtIdTitularCheque.setText("");
        try {
            String clienteProveedor = comboTitularDestino.getSelectedItem() != null ? comboTitularDestino.getSelectedItem().toString() : null;
            if (clienteProveedor == null || clienteProveedor.equals("--")) {
                TxtIdTitularCheque.setText("");
            } else {
                ClienteProveedor clienteProveedorSeleccionado = daoCheque.obtenerDatosClienteProveedor(clienteProveedor, con.getConexion());
                if (clienteProveedorSeleccionado != null) {
                    TxtIdTitularCheque.setText(String.valueOf(clienteProveedorSeleccionado.getIdClienteProveedor()));
                } else {
                    TxtIdTitularCheque.setText("");
                }
            }

        } catch (Exception e) {
            Utilidades.msg(null, "Se produjo un error en la seleccion del combo Titular Destino Cheque, ingrese nuevamente");
            this.dispose();
        }
        
    }//GEN-LAST:event_comboTitularDestinoItemStateChanged

    private void comboCuentaSalidaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboCuentaSalidaItemStateChanged
        TxtIdTitularCheque.setText("");
        try {
            String clienteProveedor = comboCuentaSalida.getSelectedItem() != null ? comboCuentaSalida.getSelectedItem().toString() : null;
            if (clienteProveedor == null || clienteProveedor.equals("--")) {
                TxtIdTitularCheque.setText("");
            } else {
                ClienteProveedor clienteProveedorSeleccionado = daoCheque.obtenerDatosClienteProveedor(clienteProveedor, con.getConexion());
                if (clienteProveedorSeleccionado != null) {
                    TxtIdTitularCheque.setText(String.valueOf(clienteProveedorSeleccionado.getIdClienteProveedor()));
                } else {
                    TxtIdTitularCheque.setText("");
                }
            }

        } catch (Exception e) {
            Utilidades.msg(null, "Se produjo un error en la seleccion del combo Titular Cheque, ingrese nuevamente");
            this.dispose();
        }
    }//GEN-LAST:event_comboCuentaSalidaItemStateChanged

    private void comboCuentaSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCuentaSalidaActionPerformed
        // COMBO CUENTA DE SALIDA
    }//GEN-LAST:event_comboCuentaSalidaActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
if (TxtNumero.getText().equals("")) {
            Utilidades.msg(null, "Ingrese el número del cheque a eliminar");
            return;
        }

        try {

            //corfirmar
            if (!Utilidades.existe(con.getConexion(), "SELECT 1 FROM cheque_propio WHERE nro_cheque = " + TxtNumero.getText())){
                Utilidades.msg(null, "El cheque no existe:");
                return;
            }
            
            //confirmacion
            int opcion = JOptionPane.showConfirmDialog(this, "¿Está seguro que desea eliminar este cheque?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION
            );
            
            
            if(opcion == JOptionPane.YES_OPTION){
                String sql = "DELETE FROM cheque_propio WHERE nro_cheque = ?";
                PreparedStatement ps = con.getConexion().prepareStatement(sql);
                ps.setLong(1, Long.parseLong(TxtNumero.getText()));
                ps.executeUpdate();
                
                Utilidades.msg(null, "cheque eliminado correctamente");
                
                
                //limpiar campos
                TxtNumero.setText("");
            TxtImporteCheque.setText("");
            jDateFechaCobro.setDate(null);
            TxtIdChequePropio.setText("");
            TxtIdTitularCheque.setText("");
            TxtObservacionCheque.setText("");
            btnAgregar.setEnabled(true);
            btnModificar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnLimpiar.setEnabled(true);
            comboCuentaSalida.setSelectedIndex(0);
            comboTitularDestino.setSelectedIndex(0);
            }

        } catch (SQLException e) {
            e.printStackTrace();
            Utilidades.msg(null, "Error al eliminar el cheque: " + e.getMessage());
        }
       
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if(TxtNumero.getText().equals("")){
            Utilidades.msg(null, "Ingrese el número del cheque a modificar");
            TxtNumero.requestFocus();
            return;
        }
        
        if (!Utilidades.existe(con.getConexion(), "SELECT 1 FROM cheque_propio WHERE nro_cheque = " + TxtNumero.getText())) {
            Utilidades.msg(null, "El cheque no existe");
            return;
        }
        
        //Validacion de campos a modificar
        if (TxtImporteCheque.getText().equals("") || !Utilidades.isValidBigDecimal(TxtImporteCheque.getText())) {
            Utilidades.msg(null, "Ingrese un importe válido");
            TxtImporteCheque.requestFocus();
            return;
        }
        
        if(jDateFechaCobro.getDate() == null){
            Utilidades.msg(null, "Ingrese una fecha de cobro");
            jDateFechaCobro.requestFocus();
            return;
        }
        
        try{
        
            String sql = "UPDATE cheque_propio SET id_titular = ?, importe = ?, fecha_cobro = ?, observacion = ?" + "WHERE nro_cheque = ?";
            
            PreparedStatement ps = con.getConexion().prepareStatement(sql);
            
            ps.setInt(1, Integer.parseInt(TxtImporteCheque.getText()));
            ps.setBigDecimal(2, new BigDecimal(TxtImporteCheque.getText()));
            //ps.setDate(3, new java.sql.Date.Date(jDateFechaCobro.getDate().getTime()));
            ps.setString(4, TxtObservacionCheque.getText());
            ps.setLong(5, Long.parseLong(TxtNumero.getText()));
            
            ps.executeUpdate();
            
            //LIMPIAR CAMPOS
            TxtNumero.setText("");
            TxtImporteCheque.setText("");
            TxtObservacionCheque.setText("");
            comboTitularDestino.setSelectedIndex(0);
            jDateFechaCobro.setDate(null);
        } catch(SQLException e){
            e.printStackTrace();
            Utilidades.msg(null, "Error al modificar el cheque: " + e.getMessage());
        }
        
    }                                            

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmABMChequeTerceros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmABMChequeTerceros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmABMChequeTerceros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmABMChequeTerceros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmABMChequeTerceros().setVisible(true);
            }
        });    }//GEN-LAST:event_btnModificarActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TxtIdChequePropio;
    private javax.swing.JTextField TxtIdCuenta;
    private javax.swing.JTextField TxtIdTitularCheque;
    private javax.swing.JTextField TxtImporteCheque;
    private javax.swing.JTextField TxtNumero;
    private javax.swing.JTextField TxtObservacionCheque;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscarCuenta;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> comboCuentaSalida;
    private javax.swing.JComboBox<String> comboTitularDestino;
    private com.toedter.calendar.JDateChooser jDateFechaCobro;
    private javax.swing.JLabel lblCuentaSalida;
    private javax.swing.JLabel lblFechaCobro;
    private javax.swing.JLabel lblImporteCheque;
    private javax.swing.JLabel lblNumCheque;
    private javax.swing.JLabel lblObservacionCheque;
    private javax.swing.JLabel lblTitularDestino;
    // End of variables declaration//GEN-END:variables

 
}
