/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.flujos.Formularios;

import com.flujos.DAOs.DAOCuenta;
import com.flujos.Entidades.Cuenta;
import com.flujos.Entidades.Movimiento;
import com.flujos.Utilidades.Conexion;
import com.flujos.Utilidades.Utilidades;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author monse
 */
public class FrmABMCuentas extends javax.swing.JFrame {

    
    
    private Conexion con;
    
    DefaultComboBoxModel<String> modeloComboMovimiento = new DefaultComboBoxModel<>();

    private DAOCuenta daoCuenta;
    /**
     * Creates new form FrmABMCuentas
     */
    public FrmABMCuentas() {
        try {
            initComponents();
            comboMovimiento.setModel(modeloComboMovimiento);
            inicializar();
        } catch (SQLException ex) {
            Utilidades.msg(null, "error al inicializar la ventana");
            this.dispose();
        }
        
    }

    
       private void inicializar() throws SQLException {
        txtIdcuenta.setText("");
        txtIdMovimiento.setText("");
        txtIdcuenta.setVisible(false);
        txtIdMovimiento.setVisible(false);
        txtCodigo.setText("");
        txtConcepto.setText("");
        comboClasificacion.setSelectedIndex(0);
        comboIngresoegreso.setSelectedIndex(0);
        btnAgregar.setEnabled(true);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnLimpiar.setEnabled(true);
        daoCuenta = new DAOCuenta();
        con = new Conexion();
        daoCuenta.llenarComboCuenta(modeloComboMovimiento,con.getConexion());
        comboMovimiento.setSelectedIndex(0);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCodigo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        lblConcepto = new javax.swing.JLabel();
        txtConcepto = new javax.swing.JTextField();
        lblClasificacion = new javax.swing.JLabel();
        comboClasificacion = new javax.swing.JComboBox<>();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnBuscarCuenta = new javax.swing.JButton();
        txtIdcuenta = new javax.swing.JTextField();
        lblIngresoegreso = new javax.swing.JLabel();
        comboIngresoegreso = new javax.swing.JComboBox<>();
        lblMovimiento = new javax.swing.JLabel();
        comboMovimiento = new javax.swing.JComboBox<>();
        txtIdMovimiento = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblCodigo.setText("Codigo");

        lblConcepto.setText("Concepto");

        lblClasificacion.setText("Clasificacion");

        comboClasificacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "Operativo", "Inversion", "Financiacion" }));

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnBuscarCuenta.setText("Buscar");
        btnBuscarCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCuentaActionPerformed(evt);
            }
        });

        lblIngresoegreso.setText("Ingreso / Egreso");

        comboIngresoegreso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "Ingreso", "Egreso" }));

        lblMovimiento.setText("Movimiento");

        comboMovimiento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboMovimientoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(lblCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addComponent(btnBuscarCuenta)
                        .addGap(163, 163, 163)
                        .addComponent(txtIdcuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblConcepto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(txtConcepto, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lblMovimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblIngresoegreso, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                                    .addComponent(lblClasificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboClasificacion, 0, 220, Short.MAX_VALUE)
                                    .addComponent(comboIngresoegreso, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboMovimiento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtIdMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(6, 6, 6))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscarCuenta)
                    .addComponent(txtIdcuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblConcepto, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtConcepto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboClasificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMovimiento)
                            .addComponent(comboMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblIngresoegreso)
                            .addComponent(comboIngresoegreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAgregar)
                            .addComponent(btnModificar)
                            .addComponent(btnEliminar)
                            .addComponent(btnLimpiar))
                        .addGap(18, 18, 18)
                        .addComponent(btnSalir))
                    .addComponent(lblClasificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed

        if (txtCodigo.getText().equals("")) {
            Utilidades.msg(null, "El codigo no puede estar vacio");
            txtCodigo.requestFocus();
            return;
        }
        if (txtConcepto.getText().equals("")) {
            Utilidades.msg(null, "El concepto no puede estar vacio");
            txtConcepto.requestFocus();
            return;
        }
        if (comboClasificacion.getSelectedItem().equals("--")) {
            Utilidades.msg(null, "La clasificacion no puede estar vacia");
            comboClasificacion.requestFocus();
            return;
        }
        if (comboIngresoegreso.getSelectedItem().equals("--")) {
            Utilidades.msg(null, "El ingreso/egreso no puede estar vacio");
            comboIngresoegreso.requestFocus();
            return;
        }
        Cuenta cuenta = new Cuenta();
        cuenta.setCodConcepto(txtCodigo.getText());
        cuenta.setNombreConcepto(txtConcepto.getText());
        cuenta.setClaseConcepto(comboClasificacion.getSelectedItem().toString());
        cuenta.setIngreso(comboIngresoegreso.getSelectedItem().toString());
        daoCuenta.actualizar(cuenta, con.getConexion());
        Utilidades.msg(null, "Cuentas actualizado corrrectamente");
        txtCodigo.setText("");
        txtConcepto.setText("");
        comboClasificacion.setSelectedIndex(0);
        btnAgregar.setEnabled(true);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        daoCuenta.eliminar(Long.valueOf(txtCodigo.getText()), con.getConexion());
        Utilidades.msg(null, "Se elimino el codigo correctamente");
        txtCodigo.setText("");
        txtConcepto.setText("");
        comboClasificacion.setSelectedIndex(0);
        comboIngresoegreso.setSelectedIndex(0);
        btnAgregar.setEnabled(true);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        txtCodigo.setText("");
        txtConcepto.setText("");
        txtIdMovimiento.setText("");
        txtIdcuenta.setText("");
        comboMovimiento.setSelectedIndex(0);
        comboClasificacion.setSelectedIndex(0);
        comboIngresoegreso.setSelectedIndex(0);
       

        btnAgregar.setEnabled(true);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        try {
            con.cerrarConexion();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al salir de la ventana, intente de nuevo.");
            this.dispose();
        }
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if (txtCodigo.getText().equals("")) {
            Utilidades.msg(null, "El codigo no puede estar vacio");
            txtCodigo.requestFocus();
            return;
        }

        if (txtConcepto.getText().equals("")) {
            Utilidades.msg(null, "El concepto no puede estar vacio");
            txtConcepto.requestFocus();
            return;
        }
        
        if (comboClasificacion.getSelectedItem().equals("--")) {
            Utilidades.msg(null, "La clasificacion no puede estar vacia");
            comboClasificacion.requestFocus();
            return;
        }
        if (comboIngresoegreso.getSelectedItem().equals("--")) {
            Utilidades.msg(null, "El ingreso/egreso no puede estar vacio");
            comboIngresoegreso.requestFocus();
            return;
        }
        
        
        if (Utilidades.existe(con.getConexion(), "SELECT (1) FROM cuentas WHERE cod_concepto = '" + txtCodigo.getText() + "' ")) {

            Utilidades.msg(null, "No se puede ingresar porque el codigo ya existe");
            txtCodigo.setText("");
            txtConcepto.setText("");
            comboClasificacion.setSelectedIndex(0);
            comboIngresoegreso.setSelectedIndex(0);


        } else {
            Cuenta cuenta = new Cuenta();
            cuenta.setCodConcepto(txtCodigo.getText());
            cuenta.setNombreConcepto(txtConcepto.getText());
            cuenta.setClaseConcepto(comboClasificacion.getSelectedItem().toString());
            cuenta.setIngreso(comboIngresoegreso.getSelectedItem().toString().equals("Ingreso") ? "1" : "0");
            cuenta.setIdMovimiento(Long.parseLong(txtIdMovimiento.getText()));
            try {
                daoCuenta.ingresarCuenta(cuenta, con.getConexion());
            } catch (SQLException ex) {
                Logger.getLogger(FrmABMCuentas.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            Utilidades.msg(null, "Concepto ingresado correctamente");
            txtCodigo.setText("");
            txtConcepto.setText("");
            comboClasificacion.setSelectedIndex(0);
            comboIngresoegreso.setSelectedIndex(0);
            comboMovimiento.setSelectedIndex(0);
            txtIdMovimiento.setText("");
            txtIdcuenta.setText("");
        }

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnBuscarCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCuentaActionPerformed

        btnAgregar.setEnabled(false);
        btnModificar.setEnabled(true);
        btnEliminar.setEnabled(true);

        String dato = JOptionPane.showInputDialog("Concepto: ");

        if (dato != null && !dato.equals("")){
            Cuenta cuenta = daoCuenta.obtenerDatos(dato, con.getConexion());

            if (cuenta != null) {
                txtCodigo.setText(String.valueOf(cuenta.getCodConcepto()));
                txtConcepto.setText(cuenta.getNombreConcepto());
                comboClasificacion.setSelectedItem(cuenta.getClaseConcepto());
                comboIngresoegreso.setSelectedItem(cuenta.getIngreso());


            } else 
                Utilidades.msg(null, "No existe concepto o se produjo un error");
                btnAgregar.setEnabled(true);
                btnModificar.setEnabled(false);
                btnEliminar.setEnabled(false);

            }

    }//GEN-LAST:event_btnBuscarCuentaActionPerformed

    private void comboMovimientoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboMovimientoItemStateChanged
        txtIdMovimiento.setText("");
        try {
            String movimiento = comboMovimiento.getSelectedItem() != null ? comboMovimiento.getSelectedItem().toString():null;
            if (movimiento == null || movimiento.equals("--")){
                txtIdMovimiento.setText("");
            } else {
                Movimiento movimientoSeleccionado = daoCuenta.obtenerDatosMovimieto(movimiento,con.getConexion());
                if (movimientoSeleccionado != null){
                    txtIdMovimiento.setText(String.valueOf(movimientoSeleccionado.getIdMovimiento()));
                } else {
                    txtIdMovimiento.setText("");
                }
            }

        } catch (Exception e) {
            Utilidades.msg(null,"se produjo un error en la seleccion del combo movimiento, ingrese nuevamente");
            this.dispose();
        }
    }//GEN-LAST:event_comboMovimientoItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmABMCuentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmABMCuentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmABMCuentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmABMCuentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmABMCuentas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscarCuenta;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> comboClasificacion;
    private javax.swing.JComboBox<String> comboIngresoegreso;
    private javax.swing.JComboBox<String> comboMovimiento;
    private javax.swing.JLabel lblClasificacion;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblConcepto;
    private javax.swing.JLabel lblIngresoegreso;
    private javax.swing.JLabel lblMovimiento;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtConcepto;
    private javax.swing.JTextField txtIdMovimiento;
    private javax.swing.JTextField txtIdcuenta;
    // End of variables declaration//GEN-END:variables
}
